DELETE [SELECT ID FROM JBCXM__CSEvent__c LIMIT 500];
DELETE [SELECT ID FROM JBCXM__CSTask__c LIMIT 500];
List<JBCXM__CSEvent__c> eventList = new List<JBCXM__CSEvent__c>();
List<String> userNames = new List<String>{'Sri Vidya'};
List<String> statusList = new List<String>{'Open', 'In Progress'};
List<JBCXM__PickList__c> pkList = [SELECT Id FROM JBCXM__PickList__c WHERE JBCXM__CATEGORY__C = 'SalesRep Name'
                                       AND JBCXM__Active__c = TRUE LIMIT 10];
List<User> userlist = [SELECT Id, Name FROM User WHERE IsActive = TRUE AND Name IN : userNames];
JBCXM__CSEvent__c csEvent;
List<Account> ac = [SELECT Id, Name FROM Account WHERE Name = 'Account For Related List'];
List<Account> accList = [SELECT Id, Name FROM Account WHERE JBCXM__CustomerInfo__c != null LIMIT 10];
if(ac != null && ac.size() > 0) {accList.add(ac.get(0));}
System.debug(JSON.serialize(accList));
Integer i = 0;
Integer j = 0;
Integer k = 0;
for(Account acc : accList) {
    for(Integer n=0; n <1; n++) {
        csEvent = new JBCXM__CSEvent__c(JBCXM__Account__c = acc.Id,
                                            JBCXM__Assigned__c = userList.get(i).Id,
                                            JBCXM__Date__c = date.today(),
                                            JBCXM__Status__c = statusList.get(j),
                                            JBCXM__Type__c = pkList.get(k).Id,
                                            JBCXM__TasksCount__c = 1,
                                            JBCXM__Description__c = 'SampleData',
                                            Name = 'Sample Event Created With Script');
            i++;
            j++;
            k++;
            eventList.add(csEvent);
            if(i==userList.size()) { i = 0;}
            if(j==statusList.size()) { j = 0;}
            if(k==pkList.size()) { k = 0;}
    }
}
i=0;j=0;k=0;
Integer l=0;
List<Integer> eventDate  = new List<Integer>{-1,-2,-3,-7,-8,-9,-30,-35,-45,-60,-90,-100,-110, -120,0,1,2,3,7,8,9,30,35,45,60,90,100,110,120};
for(Integer n : eventDate) {
    Date d = date.today();
    csEvent = new JBCXM__CSEvent__c(JBCXM__Account__c = accList.get(l).Id,
                                    JBCXM__Assigned__c = userList.get(i).Id,
                                    JBCXM__Date__c = d.addDays(n),
                                    JBCXM__Status__c = statusList.get(j),
                                    JBCXM__Type__c = pkList.get(k).Id,
                                    JBCXM__TasksCount__c = 1,
                                    JBCXM__Description__c = 'SampleData',
                                    Name = 'Sample Event Created With Script');
    i++;
    j++;
    k++;
    l++;
    eventList.add(csEvent);
    if(l==accList.size()) { l = 0;}
    if(i==userList.size()) { i = 0;}
    if(j==statusList.size()) { j = 0;}
    if(k==pkList.size()) { k = 0;}
}
insert eventList;
System.debug('Total Event:' +eventList.size());
i=0; j=0;
List<JBCXM__ApplicationSettings__c> appSettingsList = [SELECT ID, JBCXM__SFTaskAssociated__c, JBCXM__TaskFields__c
                                                         from JBCXM__ApplicationSettings__c LIMIT 1];
JBCXM__ApplicationSettings__c appSettings;
if(appSettingsList != null && appSettingsList.size() > 0) {
    appSettings = appSettingsList.get(0);
    List<String> priority = new List<String>{'High', 'Normal', 'Low'};
    List<String> status = new List<String>{'Not Started', 'In Progress','Waiting on someone else',
                				'Deferred'};
    if(!appSettings.JBCXM__SFTaskAssociated__c) {
        List<JBCXM__CSTask__c> taskList = new List<JBCXM__CSTask__c>();
        JBCXM__CSTask__c task = null;
        for(JBCXM__CSEvent__c event : eventList) {
            task = new JBCXM__CSTask__c(Name = 'Event',
                                        JBCXM__Account__c = event.JBCXM__Account__c,
                                        JBCXM__Assigned__c = event.JBCXM__Assigned__c,
                                        JBCXM__Date__c = event.JBCXM__Date__c,
                                       	JBCXM__Priority__c = priority.get(i),
                                       	JBCXM__RelatedRecordId__c = event.Id,
                                        JBCXM__Status__c = status.get(j),
                                       	JBCXM__Subject__c = 'Sample Task Created with Script');
            i++;
            j++;
            if(i==userList.size()) { i = 0;}
            if(j==statusList.size()) { j = 0;}
            taskList.add(task);
        }
      	insert taskList;
        System.debug('CSTask Count :' +taskList.size());
    }  else {
        List<Task> salesforceTasks = new List<Task>();
        Task t;
        for(JBCXM__CSEvent__c event : eventList){
        	t = new Task(OwnerId = event.JBCXM__Assigned__c,
        	                WhatId = event.Id,
        					Status = status.get(j),
        					Priority = priority.get(i),
        					ActivityDate = event.JBCXM__Date__c,
        					Subject = 'Sample Task Created with Script');
            i++;
            j++;
            if(i==priority.size()) { i = 0;}
            if(j==status.size()) { j = 0;}
            salesforceTasks.add(t);
        }
       	insert salesforceTasks;
        System.debug('Total Salesforce Tasks : '+salesforceTasks.size());
    }
}
